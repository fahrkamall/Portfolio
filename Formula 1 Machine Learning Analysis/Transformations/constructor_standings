# Create a text input widget to capture file date and assign the value to a variable
dbutils.widgets.text("p_file_date", "2021-03-28")
v_file_date = dbutils.widgets.get("p_file_date")

# Run the configuration notebook to load path and environment variables
%run "../includes/configuration"

# Run the common functions notebook to define utility functions
%run "../includes/common_functions"

# Set the current database context to 'f1_presentation' in Hive metastore
%sql
use hive_metastore.f1_presentation

# Load the race_results table into a DataFrame for further processing
race_results_df = spark.sql("SELECT * FROM race_results")

# Import functions for data manipulation
from pyspark.sql.functions import sum, when, count, col

# Calculate the total points and wins for each constructor by year
constructor_standings_df = race_results_df \
    .groupBy("race_year", "team") \
    .agg(sum("points").alias("total_points"),      # Calculate the total points
         count(when(col("position") == 1, True)).alias("wins"))  # Count the number of wins

# Import Window function to apply ranking
from pyspark.sql.window import Window
from pyspark.sql.functions import desc, rank

# Define the window specification for ranking constructors based on total points and wins
constructor_rank_spec = Window.partitionBy("race_year").orderBy(desc("total_points"), desc("wins"))

# Apply the window spec to add a rank column to each constructor
final_df = constructor_standings_df.withColumn("rank", rank().over(constructor_rank_spec))

# Define the condition for merging up-to-date constructor standings data into Delta table
merge_condition = "tgt.team = src.team AND tgt.race_year = src.race_year"

# Merge the processed data into the Delta table for constructor standings
merge_delta_data(final_df, 'f1_presentation', 'constructor_standings', presentation_folder_path, merge_condition, 'race_year')

# This SQL cell will select and display the constructor standings for the year 2021
%sql
SELECT * FROM f1_presentation.constructor_standings WHERE race_year = 2021;

# This SQL cell will count and display the number of constructor standings records by year, in descending order of years
%sql
SELECT race_year, COUNT(1)
FROM f1_presentation.constructor_standings
GROUP BY race_year
ORDER BY race_year DESC;


